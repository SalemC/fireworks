{"version":3,"sources":["serviceWorker.js","App/helpers/index.js","App/components/Particle/index.js","App/components/Particle/Child/index.js","App/components/Firework/index.js","App/components/Details/index.js","App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","getRandomInt","min","max","minimum","maximum","Math","ceil","floor","random","splitRandomColor","color","replace","split","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","padZero","string","len","Array","join","slice","invertColor","toReturn","indexOf","parseInt","calculateAge","moment","diff","getVisibility","document","hidden","visible","visibilityChange","msHidden","webkitHidden","Particle","x","y","canvas","velocity","update","acceleration","position","applyForce","force","draw","context","getContext","beginPath","arc","PI","fillStyle","strokeStyle","fill","stroke","closePath","this","Child","hasInverted","valid","lifespan","drawCircle","size","drawTriangle","moveTo","lineTo","drawSquare","drawRandomShape","type","globalAlpha","Firework","gravity","exploded","particles","firework","explode","forEach","particle","filter","push","ChildParticle","width","height","Details","getText","age","props","startsWith","className","React","Component","App","state","dimensions","fireworks","visibility","fireworkTimeout","cleanInterval","createRef","setupTimings","setInterval","cleanFireworks","setTimeout","startDisplay","clearTimings","clearInterval","setupListeners","addEventListener","handleResize","handleVisibilityChange","clearListeners","removeEventListener","setState","innerWidth","innerHeight","sqrt","spawnFirework","clearTimeout","current","undefined","animateFireworks","globalCompositeOperation","fillRect","reset","ref","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5fbcce2e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import moment from 'moment';\n\nexport const getRandomInt = (min = 0, max = 1) => {\n    let minimum = min;\n    let maximum = max;\n\n    minimum = Math.ceil(min);\n    maximum = Math.floor(max);\n\n    return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n};\n\nexport const getRandomColor = () => `rgb(${Math.floor(Math.random() * 256)},${Math.floor(Math.random() * 256)},${Math.floor(Math.random() * 256)})`;\n\nexport const splitRandomColor = color => color.replace('rgb(', '').replace(')', '').split(',');\n\nexport const componentToHex = (c) => {\n    const hex = c.toString(16);\n\n    return hex.length === 1 ? `0${hex}` : hex;\n};\n\nexport const rgbToHex = (r, g, b) => `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`;\n\nexport const padZero = (string, len) => {\n    const length = len || 2;\n\n    const zeros = new Array(length).join('0');\n\n    return (zeros + string).slice(-length);\n};\n\nexport const invertColor = (hex) => {\n    let toReturn = hex;\n\n    if (toReturn.indexOf('#') === 0) {\n        toReturn = toReturn.slice(1);\n    }\n\n    if (toReturn.length === 3) {\n        toReturn = toReturn[0]\n        + toReturn[0]\n        + toReturn[1]\n        + toReturn[1]\n        + toReturn[2]\n        + toReturn[2];\n    }\n\n    let r = parseInt(toReturn.slice(0, 2), 16);\n    let g = parseInt(toReturn.slice(2, 4), 16);\n    let b = parseInt(toReturn.slice(4, 6), 16);\n\n    r = (255 - r).toString(16);\n    g = (255 - g).toString(16);\n    b = (255 - b).toString(16);\n\n    return `#${padZero(r)}${padZero(g)}${padZero(b)}`;\n};\n\nexport const calculateAge = () => moment().diff(moment('2000-03-23'), 'years');\n\nexport const getVisibility = () => {\n    if (typeof document.hidden !== 'undefined') {\n        return {\n            visible: true,\n            hidden: 'hidden',\n            visibilityChange: 'visibilitychange',\n        }\n    } else if (typeof document.msHidden !== 'undefined') {\n        return {\n            visible: true,\n            hidden: 'msHidden',\n            visibilityChange: 'msvisibilitychange',\n        }\n    } else if (typeof document.webkitHidden !== 'undefined') {\n        return {\n            visible: true,\n            hidden: 'webkitHidden',\n            visibilityChange: 'webkitvisibilitychange',\n        }\n    }\n\n    return {\n        visible: true,\n        hidden: '',\n        visibilityChange: '',\n    }\n}\n","class Particle {\n    /**\n     * Particle class.\n     *\n     * @param {Number} x\n     * @param {Number} y\n     * @param {React.RefObject<any>.current} canvas\n     * @param {Number} color\n     * @param {Number} velocity\n     *\n     * @return {Particle}\n     */\n    constructor (x, y, canvas, color, velocity) {\n        this.position = { x, y };\n\n        this.velocity = velocity;\n\n        this.acceleration = { x: 0, y: 0 };\n\n        this.canvas = canvas;\n        this.color = color;\n    }\n\n    /**\n     * Update our particle\n     *\n     * @return {void}\n     */\n    update = () => {\n        this.velocity.x += this.acceleration.x;\n        this.velocity.y += this.acceleration.y;\n\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n\n        this.acceleration.x *= 0;\n        this.acceleration.y *= 0;\n    }\n\n    /**\n     * Apply a force to our particle.\n     *\n     * @return {void}\n     */\n    applyForce = (force) => {\n        this.acceleration.x += force.x;\n        this.acceleration.y += force.y;\n    }\n\n    /**\n     * Draw our particle.\n     *\n     * @return {void}\n     */\n    draw = () => {\n        if (!this.canvas) { return; }\n\n        const context = this.canvas.getContext('2d');\n\n        context.beginPath();\n\n        context.arc(this.position.x, this.position.y, 2.5, 0, 2 * Math.PI);\n\n        // Styles\n        context.fillStyle = this.color;\n        context.strokeStyle = this.color;\n\n        // Draw\n        context.fill();\n        context.stroke();\n\n        context.closePath();\n    }\n}\n\nexport default Particle;\n","import { getRandomInt, invertColor, rgbToHex, splitRandomColor } from '../../../helpers';\n\nimport Particle from '../';\n\nclass Child extends Particle {\n    /**\n     * Child Particle class.\n     *\n     * @param {Number} x\n     * @param {Number} y\n     * @param {React.RefObject<any>.current} canvas\n     * @param {Number} color\n     * @param {Number} velocity\n     * @param {Number} hasInverted\n     *\n     * @return {Child}\n     */\n    constructor (x, y, canvas, color, velocity, hasInverted) {\n        super(x, y, canvas, color, velocity);\n\n        this.velocity = {\n            x: Math.random() * getRandomInt(-30, 30),\n            y: Math.random() * getRandomInt(-30, 30),\n        };\n\n        this.lifespan = getRandomInt(80, 120) / 100;\n        this.size = getRandomInt(10, 20) / 10;\n        this.type = getRandomInt(0, 3);\n\n        // 1 in 5 chance to have the opposite colored particle\n        this.color = hasInverted && getRandomInt(0, 5) === 0\n            ? invertColor(\n                rgbToHex(\n                    splitRandomColor(color)[0],\n                    splitRandomColor(color)[1],\n                    splitRandomColor(color)[2],\n                ),\n            ) : color;\n    }\n\n    /**\n     * Is our particle valid?\n     *\n     * @return {Boolean}\n     */\n    valid = () => this.lifespan <= 0\n\n    /**\n     * Update our particle.\n     *\n     * @return {void}\n     */\n    update = () => {\n        this.velocity.x *= 0.8;\n        this.velocity.y *= 0.8;\n\n        this.lifespan -= 0.008;\n\n        this.velocity.x += this.acceleration.x;\n        this.velocity.y += this.acceleration.y;\n\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n\n        this.acceleration.x *= 0;\n        this.acceleration.y *= 0;\n    }\n\n    /**\n     * Draw a circle.\n     *\n     * @return {void}\n     */\n    drawCircle = (context) => context.arc(\n        this.position.x,\n        this.position.y,\n        this.size,\n        0,\n        2 * Math.PI,\n    );\n\n    /**\n     * Draw a triangle.\n     *\n     * @return {void}\n     */\n    drawTriangle = (context) => {\n        const { size, position } = this;\n        const { x, y } = position;\n\n        context.moveTo(x + size, y);\n        context.lineTo(x, y - size);\n        context.lineTo(x - size, y);\n        context.lineTo(x + size, y);\n    }\n\n    /**\n     * Draw a square.\n     *\n     * @return {void}\n     */\n    drawSquare = (context) => {\n        const { size, position } = this;\n        const { x, y } = position;\n\n        context.moveTo(x, y);\n        context.lineTo(x + size, y);\n        context.lineTo(x + size, y + size);\n        context.lineTo(x, y + size);\n        context.lineTo(x, y);\n    }\n\n    /**\n     * Draw a shape based on our particle type.\n     *\n     * @return {void}\n     */\n    drawRandomShape = (context) => {\n        switch (this.type) {\n            case (0):\n                return this.drawCircle(context);\n            case (1):\n                return this.drawTriangle(context);\n            case (2):\n                return this.drawSquare(context);\n            default:\n                return null;\n        }\n    }\n\n    /**\n     * Draw our particle.\n     *\n     * @return {void}\n     */\n    draw = () => {\n        if (!this.canvas) { return; }\n\n        const context = this.canvas.getContext('2d');\n\n        context.beginPath();\n\n        // Fade out\n        context.globalAlpha = this.lifespan > 0 ? this.lifespan : 0;\n\n        // Draw a random shape\n        this.drawRandomShape(context);\n\n        // Styles\n        context.strokeStyle = this.color;\n\n        // Draw\n        context.stroke();\n\n        context.closePath();\n    }\n}\n\nexport default Child;\n","import { getRandomInt, getRandomColor } from '../../helpers';\n\nimport ChildParticle from '../Particle/Child';\nimport Particle from '../Particle';\n\nclass Firework {\n    /**\n     * Firework class.\n     *\n     * @param {React.RefObject<any>.current} canvas\n     * @param {Number} gravity\n     * @param {Number} velocity\n     *\n     * @return {Firework}\n     */\n    constructor (canvas, gravity, velocity) {\n        this.canvas = canvas;\n\n        this.color = getRandomColor();\n\n        this.gravity = gravity;\n\n        this.velocity = velocity;\n\n        // 1 in 3 chance to have inverted particles\n        this.hasInverted = getRandomInt(0, 3) === 0;\n\n        this.firework = new Particle(\n            getRandomInt(0, canvas.width),\n            canvas.height,\n            canvas,\n            this.color,\n            this.velocity,\n        );\n\n        this.exploded = false;\n\n        this.particles = [];\n    }\n\n    /**\n     * Is our firework still valid?\n     *\n     * @return {Boolean}\n     */\n    valid = () => this.exploded && this.particles.length <= 0\n\n    /**\n     * Update the firework.\n     *\n     * @return {void}\n     */\n    update = () => {\n        const {\n            exploded,\n            firework: {\n                applyForce,\n                update,\n                velocity\n            },\n            explode,\n            gravity,\n        } = this;\n\n        if (!exploded) {\n            applyForce(gravity);\n            update();\n\n            // If we've got 0 velocity or above, we've hit our apex;\n            // Let's explode the particle\n            if (velocity.y >= 0) { explode(); }\n        } else {\n            // Update each child particle\n            this.particles.forEach((particle) => {\n                particle.applyForce(gravity);\n                particle.update();\n            });\n\n            // Remove any invalid particles\n            this.particles = this.particles.filter(({ valid }) => !valid());\n        }\n    }\n\n    /**\n     * Make the firework explode.\n     *\n     * @return {void}\n     */\n    explode = () => {\n        const {\n            firework, canvas, particles, color, velocity, hasInverted,\n        } = this;\n\n        // Make 100 child particles\n        new Array(100).fill(null).forEach(() => particles.push(\n            new ChildParticle(\n                firework.position.x,\n                firework.position.y,\n                canvas,\n                color,\n                velocity,\n                hasInverted,\n            ),\n        ));\n\n        this.exploded = true;\n    }\n\n    /**\n     * Draw the firework.\n     *\n     * @return {void}\n     */\n    draw = () => {\n        const { draw } = this.firework;\n\n        // Once we've exploded, we don't want to draw the parent particle\n        if (!this.exploded) { draw(); }\n\n        // Draw each child particle\n        this.particles.forEach(particle => particle.draw());\n    }\n}\n\nexport default Firework;\n","import React from 'react';\n\nclass Details extends React.Component {\n    /**\n     * Get the grammatically correct age text.\n     */\n    getText = () => {\n        const { age } = this.props;\n\n        const type = age.toString().startsWith('8') || age === 18 ? 'an' : 'a';\n\n        return `I'm ${type} ${age} year-old, web-based software developer.`;\n    }\n\n    /**\n     * Render this class.\n     */\n    render () {\n        return (\n            <div className=\"details-container\">\n                <h1 className=\"white header\">Salem Cresswell</h1>\n\n                <p className=\"white secondary\">{this.getText()}</p>\n                <p className=\"white secondary\">On a day-to-day basis, I'll mainly program in Javascript, HTML & PHP.</p>\n            </div>\n        )\n    }\n}\n\nexport default Details;\n","import React, { Component, createRef } from 'react';\n\nimport { getRandomInt, calculateAge, getVisibility } from './helpers';\nimport Firework from './components/Firework';\nimport Details from './components/Details';\n\nclass App extends Component {\n    /**\n     * Our default state.\n     */\n    state = {\n        dimensions: { width: 0, height: 0 },\n        fireworks: [],\n        visibility: getVisibility(),\n        age: calculateAge(),\n    }\n\n    /**\n     * The timeout for creating a firework.\n     */\n    fireworkTimeout = null;\n\n    /**\n     * The interval between state cleanups.\n     */\n    cleanInterval = null;\n\n    /**\n     * Our canvas.\n     */\n    canvas = createRef();\n\n    /**\n     * Handle the mounting of our component.\n     *\n     * @return {void}\n     */\n    componentDidMount () {\n        this.handleResize();\n\n        this.setupListeners();\n        this.setupTimings();\n    }\n\n    /**\n     * Handle the unmounting of our component.\n     *\n     * @return {void}\n     */\n    componentWillUnmount () {\n        this.clearListeners();\n        this.clearTimings();\n    }\n\n    /**\n     * Setup all our intervals/timeouts.\n     *\n     * @return {void}\n     */\n    setupTimings = () => {\n        this.cleanInterval = setInterval(this.cleanFireworks, 7.5);\n        this.fireworkTimeout = setTimeout(this.startDisplay, getRandomInt(300, 600));\n    }\n\n    /**\n     * Clear all our timeouts/intervals.\n     *\n     * @return {void}\n     */\n    clearTimings = () => {\n        clearInterval(this.cleanInterval);\n        clearInterval(this.fireworkTimeout);\n    }\n\n    /**\n     * Setup all event listeners.\n     *\n     * @return {void}\n     */\n    setupListeners = () => {\n        const { visibility: { visibilityChange } } = this.state;\n\n        window.addEventListener('resize', this.handleResize);\n        document.addEventListener(visibilityChange, this.handleVisibilityChange);\n    }\n\n    /**\n     * Clear all event listeners.\n     *\n     * @return {void}\n     */\n    clearListeners = () => {\n        const { visibility: { visibilityChange } } = this.state;\n\n        window.removeEventListener('resize', this.handleResize);\n        document.removeEventListener(visibilityChange, this.handleVisibilityChange);\n    }\n\n    /**\n     * Handle the window resize event.\n     *\n     * @return {void}\n     */\n    handleResize = () => this.setState({\n        dimensions: {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        },\n    });\n\n    /**\n     * Handle our visibility change.\n     *\n     * @return {void}\n     */\n    handleVisibilityChange = () => this.setState(({ visibility }) => ({\n        visibility: {\n            ...visibility,\n            visible: !document[visibility.hidden]\n        },\n    }));\n\n    /**\n     * Start the firework display!\n     *\n     * @return {void}\n     */\n    startDisplay = () => {\n        const { dimensions: { height }, visibility: { visible }} = this.state;\n\n        const acceleration = { x: 0, y: 0.1 };\n\n        const velocity = {\n            x: -getRandomInt(-1, 1),\n            // SUVAT: v^2 = u^2 + 2as\n            y: -Math.sqrt(\n                0 + ((2 * acceleration.y)\n                // Explode anywhere between 80-90% of screen height\n                * getRandomInt(height * 0.80, height * 0.90)\n                ),\n            ),\n        };\n\n        // If our screen is visible, create fireworks\n        if (visible) {\n            this.spawnFirework(velocity, acceleration);\n        // If our screen isn't visible, reset our fireworks array\n        } else {\n            this.cleanFireworks(true);\n        }\n\n        clearTimeout(this.fireworkTimeout);\n        this.fireworkTimeout = setTimeout(this.startDisplay, getRandomInt(300, 600));\n    }\n\n    /**\n     * Generate a firework & add it to our display.\n     *\n     * @param {Number} velocity\n     * @param {Number} acceleration\n     *\n     * @return {void}\n     */\n    spawnFirework = (velocity, acceleration) => this.setState(({\n        visibility: { visible },\n        fireworks,\n    }) => ({\n        fireworks: [\n            ...fireworks,\n            visible ? new Firework(this.canvas.current, acceleration, velocity) : undefined,\n        ],\n    }));\n\n    /**\n     * Animate our existing fireworks.\n     *\n     * @return {void}\n     */\n    animateFireworks = () => {\n        const { fireworks, dimensions: { width, height } } = this.state;\n\n        const context = this.canvas.current.getContext('2d');\n\n        // Give a small trail effect to our fireworks\n        context.globalCompositeOperation = 'destination-out';\n        context.fillStyle = 'rgba(0, 0, 0, 0.575)';\n        context.fillRect(0, 0, width, height);\n        context.globalCompositeOperation = 'source-over';\n\n        // Draw our fireworks\n        fireworks.forEach(({ update, draw }) => { update(); draw(); });\n    }\n\n    /**\n     * Remove all our invalid fireworks.\n     *\n     * @param {Boolean} reset - Should we reset the display?\n     *\n     * @return {void}\n     */\n    cleanFireworks = (reset = false) => this.setState(({ fireworks }) => ({\n        fireworks: reset ? [] : fireworks.filter(({ valid }) => !valid()),\n        age: calculateAge(),\n    }), this.animateFireworks);\n\n    /**\n     * Render our class.\n     *\n     * @return {void}\n     */\n    render () {\n        const { dimensions, age } = this.state;\n\n        return (\n            <div className=\"main-container\">\n                <canvas ref={this.canvas} {...dimensions} />\n\n                <Details age={age} />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}