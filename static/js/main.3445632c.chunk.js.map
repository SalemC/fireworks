{"version":3,"sources":["serviceWorker.js","App/helpers/index.js","App/components/Particle/index.js","App/components/Firework/index.js","App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","getRandomInt","min","max","minimum","maximum","Math","ceil","floor","random","splitRandomColor","color","replace","split","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","padZero","string","len","Array","join","slice","invertColor","toReturn","indexOf","parseInt","Particle","x","y","canvas","velocity","update","acceleration","position","applyForce","force","draw","context","getContext","beginPath","arc","PI","fillStyle","strokeStyle","fill","stroke","closePath","this","ChildParticle","hasInverted","valid","lifespan","drawCircle","size","drawTriangle","moveTo","lineTo","drawSquare","getDrawMethod","type","globalAlpha","Firework","gravity","exploded","particles","firework","explode","forEach","particle","filter","push","width","height","App","state","dimensions","fireworks","visibility","visible","hidden","visibilityChange","age","fireworkTimeout","cleanInterval","createRef","setupIntervals","setInterval","cleanFireworks","setTimeout","fireworkLoop","sqrt","createFirework","clearTimeout","removeIntervals","clearInterval","setupListeners","setupVisibilityListener","addEventListener","handleResize","removeListeners","document","removeEventListener","handleVisibilityChange","setState","current","next","innerWidth","innerHeight","msHidden","webkitHidden","animateFireworks","globalCompositeOperation","fillRect","reset","moment","diff","getAgeText","startsWith","className","ref","Component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3445632c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const getRandomInt = (min = 0, max = 1) => {\n    let minimum = min;\n    let maximum = max;\n\n    minimum = Math.ceil(min);\n    maximum = Math.floor(max);\n\n    return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n};\n\nexport const getRandomColor = () => `rgb(${Math.floor(Math.random() * 256)},${Math.floor(Math.random() * 256)},${Math.floor(Math.random() * 256)})`;\n\nexport const splitRandomColor = color => color.replace('rgb(', '').replace(')', '').split(',');\n\nexport const componentToHex = (c) => {\n    const hex = c.toString(16);\n\n    return hex.length === 1 ? `0${hex}` : hex;\n};\n\nexport const rgbToHex = (r, g, b) => `#${componentToHex(r)}${componentToHex(g)}${componentToHex(b)}`;\n\nexport const padZero = (string, len) => {\n    const length = len || 2;\n\n    const zeros = new Array(length).join('0');\n\n    return (zeros + string).slice(-length);\n};\n\nexport const invertColor = (hex) => {\n    let toReturn = hex;\n\n    if (toReturn.indexOf('#') === 0) {\n        toReturn = toReturn.slice(1);\n    }\n\n    if (toReturn.length === 3) {\n        toReturn = toReturn[0]\n        + toReturn[0]\n        + toReturn[1]\n        + toReturn[1]\n        + toReturn[2]\n        + toReturn[2];\n    }\n\n    let r = parseInt(toReturn.slice(0, 2), 16);\n    let g = parseInt(toReturn.slice(2, 4), 16);\n    let b = parseInt(toReturn.slice(4, 6), 16);\n\n    r = (255 - r).toString(16);\n    g = (255 - g).toString(16);\n    b = (255 - b).toString(16);\n\n    return `#${padZero(r)}${padZero(g)}${padZero(b)}`;\n};\n","import { getRandomInt, invertColor, rgbToHex, splitRandomColor } from '../../helpers';\n\nclass Particle {\n    constructor (x, y, canvas, color, velocity) {\n        this.position = {\n            x,\n            y,\n        };\n\n        this.velocity = velocity;\n\n        this.acceleration = {\n            x: 0,\n            y: 0,\n        };\n\n        this.canvas = canvas;\n        this.color = color;\n    }\n\n    update = () => {\n        this.velocity.x += this.acceleration.x;\n        this.velocity.y += this.acceleration.y;\n\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n\n        this.acceleration.x *= 0;\n        this.acceleration.y *= 0;\n    }\n\n    applyForce = (force) => {\n        this.acceleration.x += force.x;\n        this.acceleration.y += force.y;\n    }\n\n    draw = () => {\n        if (!this.canvas) { return; }\n\n        const context = this.canvas.getContext('2d');\n\n        context.beginPath();\n\n        context.arc(this.position.x, this.position.y, 2.5, 0, 2 * Math.PI);\n\n        // Styles\n        context.fillStyle = this.color;\n        context.strokeStyle = this.color;\n\n        // Draw\n        context.fill();\n        context.stroke();\n\n        context.closePath();\n    }\n}\n\nclass ChildParticle extends Particle {\n    constructor (x, y, canvas, color, velocity, hasInverted) {\n        super(x, y, canvas, color, velocity);\n\n        this.velocity = {\n            x: Math.random() * getRandomInt(-30, 30),\n            y: Math.random() * getRandomInt(-30, 30),\n        };\n\n        this.lifespan = getRandomInt(80, 100) / 100;\n        this.size = getRandomInt(10, 20) / 10;\n        this.type = getRandomInt(0, 3);\n\n        // 1 in 5 chance to have the opposite colored particle\n        this.color = hasInverted && getRandomInt(0, 5) === 0\n            ? invertColor(\n                rgbToHex(\n                    splitRandomColor(color)[0],\n                    splitRandomColor(color)[1],\n                    splitRandomColor(color)[2],\n                ),\n            )\n            : color;\n    }\n\n    valid = () => this.lifespan <= 0\n\n    update = () => {\n        this.velocity.x *= 0.8;\n        this.velocity.y *= 0.8;\n\n        this.lifespan -= 0.011;\n\n        this.velocity.x += this.acceleration.x;\n        this.velocity.y += this.acceleration.y;\n\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n\n        this.acceleration.x *= 0;\n        this.acceleration.y *= 0;\n    }\n\n    drawCircle = (context) => {\n        context.arc(\n            this.position.x,\n            this.position.y,\n            this.size,\n            0,\n            2 * Math.PI,\n        );\n    }\n\n    drawTriangle = (context) => {\n        const { size, position } = this;\n        const { x, y } = position;\n\n        context.moveTo(x + size, y);\n        context.lineTo(x, y - size);\n        context.lineTo(x - size, y);\n        context.lineTo(x + size, y);\n    }\n\n    drawSquare = (context) => {\n        const { size, position } = this;\n        const { x, y } = position;\n\n        context.moveTo(x, y);\n        context.lineTo(x + size, y);\n        context.lineTo(x + size, y + size);\n        context.lineTo(x, y + size);\n        context.lineTo(x, y);\n    }\n\n    getDrawMethod = (context) => {\n        switch (this.type) {\n            case (0):\n                return this.drawCircle(context);\n            case (1):\n                return this.drawTriangle(context);\n            case (2):\n                return this.drawSquare(context);\n            default:\n                return null;\n        }\n    }\n\n    draw = () => {\n        if (!this.canvas) { return; }\n\n        const context = this.canvas.getContext('2d');\n\n        context.beginPath();\n\n        // Fade out\n        context.globalAlpha = this.lifespan > 0 ? this.lifespan : 0;\n\n        // Draw our shape\n        this.getDrawMethod(context);\n\n        // Styles\n        context.strokeStyle = this.color;\n\n        // Draw\n        context.stroke();\n\n        context.closePath();\n    }\n}\n\nexport { ChildParticle, Particle };\n","import { getRandomInt, getRandomColor } from '../../helpers';\nimport { Particle, ChildParticle } from '../Particle';\n\nclass Firework {\n    constructor (canvas, gravity, velocity) {\n        this.canvas = canvas;\n\n        this.color = getRandomColor();\n\n        this.gravity = gravity;\n\n        this.velocity = velocity;\n\n        // 1 in 3 chance to have inverted particles\n        this.hasInverted = getRandomInt(0, 3) === 0;\n\n        this.firework = new Particle(\n            getRandomInt(0, canvas.width),\n            canvas.height,\n            canvas,\n            this.color,\n            this.velocity,\n        );\n\n        this.exploded = false;\n\n        this.particles = [];\n    }\n\n    valid = () => this.exploded && this.particles.length <= 0\n\n    update = () => {\n        const {\n            exploded, firework, explode, gravity,\n        } = this;\n\n        const { applyForce, update, velocity } = firework;\n\n        if (!exploded) {\n            applyForce(gravity);\n            update();\n\n            // If we've got 0 velocity or above, we've hit our apex.\n            // Let's explode the particle\n            if (velocity.y >= 0) {\n                explode();\n            }\n        } else {\n            // Update each child particle\n            this.particles.forEach((particle) => {\n                particle.applyForce(gravity);\n                particle.update();\n            });\n\n            // Remove any invalid particles\n            this.particles = this.particles.filter(particle => !particle.valid());\n        }\n    }\n\n    explode = () => {\n        const {\n            firework, canvas, particles, color, velocity, hasInverted,\n        } = this;\n\n        // Make 100 child particles\n        Array(...Array(100)).forEach(() => {\n            particles.push(\n                new ChildParticle(\n                    firework.position.x,\n                    firework.position.y,\n                    canvas,\n                    color,\n                    velocity,\n                    hasInverted,\n                ),\n            );\n        });\n\n        this.exploded = true;\n    }\n\n    draw = () => {\n        const { draw } = this.firework;\n\n        // Once we've exploded, we don't want to draw the parent particle\n        if (!this.exploded) {\n            draw();\n        }\n\n        // Draw each child particle\n        this.particles.forEach(particle => particle.draw());\n    }\n}\n\nexport default Firework;\n","import React, { Component, createRef } from 'react';\nimport moment from 'moment';\n\nimport Firework from './components/Firework';\nimport { getRandomInt } from './helpers';\n\nclass App extends Component {\n    state = {\n        dimensions: {\n            width: 0,\n            height: 0,\n        },\n        fireworks: [],\n        visibility: {\n            visible: true,\n            hidden: '',\n            visibilityChange: '',\n        },\n        age: 0,\n    }\n\n    fireworkTimeout = null;\n\n    cleanInterval = null;\n\n    canvas = createRef();\n\n    componentDidMount () {\n        this.handleResize();\n\n        this.setupListeners();\n        this.setupIntervals();\n    }\n\n    componentWillUnmount () {\n        this.removeListeners();\n        this.removeIntervals();\n    }\n\n    /**\n     * Setup all our intervals\n     */\n    setupIntervals = () => {\n        // Clean our state and animate our canvas every 7.5ms\n        this.cleanInterval = setInterval(() => {\n            this.cleanFireworks();\n        }, 7.5);\n\n        // Every 300-600ms, create another firework\n        const fireworkLoop = () => {\n            const { dimensions: { height }, visibility: { visible }} = this.state;\n\n            const acceleration = {\n                x: 0,\n                y: 0.1,\n            };\n\n            const velocity = {\n                x: -getRandomInt(-1, 1),\n                // SUVAT: v^2 = u^2 + 2as\n                y: -Math.sqrt(\n                    0 + ((2 * acceleration.y)\n                    // Explode anywhere between 80-90% of screen height\n                    * getRandomInt(height * 0.80, height * 0.90)\n                    ),\n                ),\n            };\n\n            // If our screen is visible, create fireworks\n            if (visible) {\n                this.createFirework(velocity, acceleration);\n            // If our screen isn't visible, reset our fireworks array\n            } else {\n                this.cleanFireworks(true);\n            }\n\n            clearTimeout(this.fireworkTimeout);\n            this.fireworkTimeout = setTimeout(fireworkLoop, getRandomInt(300, 600));\n        };\n\n        // Setup our first timeout\n        this.fireworkTimeout = setTimeout(fireworkLoop, getRandomInt(300, 600));\n    }\n\n    /**\n     * Remove all our intervals\n     */\n    removeIntervals = () => {\n        clearInterval(this.cleanInterval);\n        clearInterval(this.fireworkTimeout);\n    }\n\n    /**\n     * Setup all our event listeners\n     */\n    setupListeners = () => {\n        this.setupVisibilityListener();\n\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    /**\n     * Remove all our event listeners\n     */\n    removeListeners = () => {\n        const { visibility: { visibilityChange } } = this.state;\n\n        document.removeEventListener(visibilityChange, this.handleVisibilityChange);\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    /**\n     * Handle the window resize event\n     */\n    handleResize = () => this.setState((current) => {\n        const next = { ...current };\n\n        next.dimensions = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n\n        return next;\n    })\n\n    /**\n     * Setup a visibility listener to check if our window is foregrounded\n     */\n    setupVisibilityListener = () => this.setState((current) => {\n        const next = { ...current };\n\n        if (typeof document.hidden !== 'undefined') {\n            next.visibility.hidden = 'hidden';\n            next.visibility.visibilityChange = 'visibilitychange';\n        } else if (typeof document.msHidden !== 'undefined') {\n            next.visibility.hidden = 'msHidden';\n            next.visibility.visibilityChange = 'msvisibilitychange';\n        } else if (typeof document.webkitHidden !== 'undefined') {\n            next.visibility.hidden = 'webkitHidden';\n            next.visibility.visibilityChange = 'webkitvisibilitychange';\n        }\n\n        return next;\n    }, () => {\n        const { visibility: { visibilityChange } } = this.state;\n\n        document.addEventListener(visibilityChange, this.handleVisibilityChange);\n    })\n\n    /**\n     * Handle our visibility change\n     */\n    handleVisibilityChange = () => this.setState((current) => {\n        const next = { ...current };\n\n        next.visibility.visible = !document[next.visibility.hidden];\n\n        return next;\n    })\n\n    /**\n     * Create a single firework\n     */\n    createFirework = (velocity, acceleration) => this.setState((current) => {\n        const next = { ...current };\n\n        // If our screen is in the foreground, add more fireworks\n        if (next.visibility.visible) {\n            next.fireworks.push(new Firework(this.canvas.current, acceleration, velocity));\n        }\n\n        return next;\n    })\n\n    /**\n     * Animate our existing fireworks\n     */\n    animateFireworks = () => {\n        const { fireworks, dimensions: { width, height } } = this.state;\n\n        // Grab our context from our canvas\n        const context = this.canvas.current.getContext('2d');\n\n        // Give a small trail effect to our fireworks\n        context.globalCompositeOperation = 'destination-out';\n        context.fillStyle = 'rgba(0, 0, 0, 0.575)';\n        context.fillRect(0, 0, width, height);\n        context.globalCompositeOperation = 'source-over';\n\n        // Draw our fireworks\n        fireworks.forEach((firework) => {\n            firework.update();\n            firework.draw();\n        });\n    }\n\n    /**\n     * Remove all our invalid fireworks\n     */\n    cleanFireworks = (reset = false) => this.setState((current) => {\n        const next = { ...current };\n\n        // If we're resetting, empty our fireworks array\n        next.fireworks = reset ? [] : next.fireworks.filter(firework => !firework.valid());\n\n        // Calculate my age\n        next.age = moment().diff(moment('2000-03-23'), 'years');\n\n        return next;\n    }, this.animateFireworks)\n\n    getAgeText = () => {\n        const { age } = this.state;\n\n        const type = age.toString().startsWith('8') || age === 18 ? 'an' : 'a';\n\n        return `I'm ${type} ${age} year-old, web-based software developer.`;\n    }\n\n    render () {\n        const { dimensions } = this.state;\n\n        return (\n            <div className=\"main-container\">\n                <canvas ref={this.canvas} {...dimensions} />\n\n                <div className=\"details-container\">\n                    <h1 className=\"white header\">Salem Cresswell</h1>\n\n                    <p className=\"white secondary\">{this.getAgeText()}</p>\n                    <p className=\"white secondary\">On a day-to-day basis, I'll mainly program in Javascript, HTML & PHP.</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}